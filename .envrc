NO_COLOR='\033[0m'
YELLOW='\033[0;33m'

export TF_VAR_email="workshop-user@iits-consulting.de" # example: mymail@mail.de

export TF_VAR_context="REPLACE_ME" # See E-Mail with credentials (TF_VAR_context)

export TF_VAR_argocd_bootstrap_project_branch=$TF_TF_VAR_context

export TF_VAR_git_registry_username="workshop-user"

# Dockerhub credentials see Readme.md -> Preparation & Requirements -> Point 6
export TF_VAR_dockerhub_username="REPLACE_ME"

#informations from the credentials e-mail
export OS_DOMAIN_NAME="REPLACE_ME" # See E-Mail with credentials (OS_DOMAIN_NAME)
export OS_PROJECT_NAME="eu-de_${TF_VAR_context}" # See E-Mail with credentials (OS_PROJECT_NAME)
export OS_USERNAME="REPLACE_ME" # See E-Mail with credentials (OS_USERNAME)

export TF_VAR_region="eu-de"
export REGION=$TF_VAR_region
export TF_VAR_stage="dev"
export TF_VAR_domain_name="${TF_VAR_context}.iits.tech"

source ./my-secrets.sh

# OTC auth
otc-auth login iam -o

ak_sk_path="${HOME}/.otc-auth-cert-manager-ak-sk"
# Cert Manager AK/SK
# Check if "cert-manager" ak/sk was already created
if [ ! -f "$ak_sk_path" ]
then
    # Execute the commands
    echo "create AK/SK for cert-manager"
    otc-auth access-token create -s "cert-manager"
    mv ./ak-sk-env.sh $ak_sk_path
fi

echo "Sourcing AK/SK for cert-manager"
source $ak_sk_path
export TF_VAR_cert_manager_access_key=$OS_ACCESS_KEY
export TF_VAR_cert_manager_secret_key=$OS_SECRET_KEY

echo "create temp AK/SK"
#Terraform temp AK/SK
source <(otc-auth temp-access-token create --duration-seconds 86390)
export TF_VAR_ak_sk_security_token=$AWS_SESSION_TOKEN

unset OS_USERNAME
unset OS_PASSWORD